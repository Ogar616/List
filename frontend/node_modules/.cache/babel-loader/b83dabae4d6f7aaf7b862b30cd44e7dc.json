{"ast":null,"code":"import _classCallCheck from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ogar/myProjects/shoppingList/src/components/checkBox.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport List from './list';\nimport TextField from \"@material-ui/core/TextField\";\nimport list from \"./data/list\";\nconsole.log(store.getState());\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      minWidth: 300,\n      backgroundColor: theme.palette.background.paper\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    }\n  };\n};\n\nvar CheckboxList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CheckboxList, _React$Component);\n\n  function CheckboxList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckboxList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckboxList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      checked: [],\n      openInfo: false,\n      openAdd: false,\n      newItem: \"\",\n      newItemInfo: ''\n    };\n\n    _this.handleOpenInfo = function () {\n      _this.setState({\n        openInfo: true\n      });\n    };\n\n    _this.handleCloseInfo = function () {\n      _this.setState({\n        openInfo: false\n      });\n    };\n\n    _this.handleOpenAddItem = function () {\n      _this.setState({\n        openAdd: true\n      });\n    };\n\n    _this.handleCloseAdd = function () {\n      _this.setState({\n        openAdd: false\n      });\n\n      list.push({\n        name: _this.state.newItem,\n        info: _this.state.newItemInfo\n      });\n    };\n\n    _this.changeNewItem = function (e) {\n      _this.setState({\n        newItem: e.target.value\n      });\n    };\n\n    _this.changeNewItemInfo = function (e) {\n      _this.setState({\n        newItemInfo: e.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckboxList, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.checkList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(List, {\n        openInfo: this.handleOpenInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        open: this.state.openInfo,\n        onClose: this.handleCloseInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"More info\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Buy in Lidl\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleCloseInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Close\"))), React.createElement(Dialog, {\n        open: this.state.openAdd,\n        onClose: this.handleCloseAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Add a new product\"), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"New item\",\n        defaultValue: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.changeNewItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined\",\n        label: \"Additional info\",\n        defaultValue: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.changeNewItemInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleCloseAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleOpenAddItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Add new item\"));\n    }\n  }]);\n\n  return CheckboxList;\n}(React.Component);\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default connect()(withStyles(styles)(CheckboxList));","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/components/checkBox.js"],"names":["React","PropTypes","connect","withStyles","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","List","TextField","list","console","log","store","getState","styles","theme","root","width","maxWidth","minWidth","backgroundColor","palette","background","paper","textField","marginLeft","spacing","unit","marginRight","CheckboxList","state","checked","openInfo","openAdd","newItem","newItemInfo","handleOpenInfo","setState","handleCloseInfo","handleOpenAddItem","handleCloseAdd","push","name","info","changeNewItem","e","target","value","changeNewItemInfo","classes","props","checkList","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport List from './list';\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport list from \"./data/list\";\n\nconsole.log(store.getState());\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    minWidth: 300,\n    backgroundColor: theme.palette.background.paper\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass CheckboxList extends React.Component {\n  state = {\n    checked: [],\n    openInfo: false,\n    openAdd: false,\n    newItem: \"\",\n    newItemInfo: ''\n  };\n  handleOpenInfo = () => {\n    this.setState({\n      openInfo: true\n    });\n  };\n\n    handleCloseInfo = () => {\n    this.setState({\n      openInfo: false\n    });\n  };\n\n  handleOpenAddItem = () => {\n    this.setState({\n      openAdd: true\n    });\n  };\n\n  handleCloseAdd = () => {\n    this.setState({\n      openAdd: false\n    });\n    list.push({\n      name: this.state.newItem,\n      info: this.state.newItemInfo\n    });\n  };\n\n  changeNewItem = e => {\n    this.setState({ newItem: e.target.value });\n  };\n\n  changeNewItemInfo = e => {\n    this.setState({ newItemInfo: e.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.checkList}>\n        <List openInfo={this.handleOpenInfo}/>\n        <Dialog open={this.state.openInfo} onClose={this.handleCloseInfo}>\n          <DialogTitle>More info</DialogTitle>\n          <DialogContent>\n            <DialogContentText>Buy in Lidl</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.handleCloseInfo}>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Dialog open={this.state.openAdd} onClose={this.handleCloseAdd}>\n          <DialogTitle>Add a new product</DialogTitle>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"New item\"\n            defaultValue=\"\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.changeNewItem}\n          />\n           <TextField\n            id=\"outlined\"\n            label=\"Additional info\"\n            defaultValue=\"\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.changeNewItemInfo}\n          />\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.handleCloseAdd}>\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Button color=\"primary\" onClick={this.handleOpenAddItem}>\n          Add new item\n        </Button>\n      </div>\n    );\n  }\n}\n\nCheckboxList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default connect()(withStyles(styles)(CheckboxList));\n"]},"metadata":{},"sourceType":"module"}