{"ast":null,"code":"import _classCallCheck from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ogar/myProjects/shoppingList/src/components/addDialog.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"./list\";\nimport list from \"./data/list\";\n\nvar styles = function styles(theme) {\n  return {\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    }\n  };\n};\n\nvar AddDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddDialog, _Component);\n\n  function AddDialog() {\n    _classCallCheck(this, AddDialog);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AddDialog).apply(this, arguments));\n  }\n\n  _createClass(AddDialog, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Dialog, {\n        open: false,\n        onClose: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Add a new product\"), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"New item\",\n        defaultValue: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.changeNewItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined\",\n        label: \"Additional info\",\n        defaultValue: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.changeNewItemInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleCloseAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add\")));\n    }\n  }]);\n\n  return AddDialog;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    openInfo: state.openInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleOpenInfo: function handleOpenInfo() {\n      return dispatch({\n        type: \"INFO\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(AddDialog));","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/components/addDialog.js"],"names":["React","Component","PropTypes","connect","withStyles","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","List","list","styles","theme","textField","marginLeft","spacing","unit","marginRight","AddDialog","classes","props","changeNewItem","changeNewItemInfo","handleCloseAdd","mapStateToProps","state","openInfo","mapDispatchToProps","dispatch","handleOpenInfo","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACrBC,IAAAA,SAAS,EAAE;AACTC,MAAAA,UAAU,EAAEF,KAAK,CAACG,OAAN,CAAcC,IADjB;AAETC,MAAAA,WAAW,EAAEL,KAAK,CAACG,OAAN,CAAcC;AAFlB;AADU,GAAL;AAAA,CAApB;;IAOME,S;;;;;;;;;;;;;6BACK;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAEP,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,KAAd;AAAqB,QAAA,OAAO,EAAE,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,SAAD;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,EAAE,EAAC,mBAFL;AAGE,QAAA,KAAK,EAAC,UAHR;AAIE,QAAA,YAAY,EAAC,EAJf;AAKE,QAAA,SAAS,EAAEA,OAAO,CAACN,SALrB;AAME,QAAA,MAAM,EAAC,QANT;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,QAAQ,EAAE,KAAKQ,aARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAYE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,KAAK,EAAC,iBAFR;AAGE,QAAA,YAAY,EAAC,EAHf;AAIE,QAAA,SAAS,EAAEF,OAAO,CAACN,SAJrB;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,OAAO,EAAC,UANV;AAOE,QAAA,QAAQ,EAAE,KAAKS,iBAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAqBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CArBF,CADF;AA6BD;;;;EAhCqBzB,S;;AAmCxB,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AAAEC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAAlB,GAAP;AACD,CAFH;;AAIE,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLC,IAAAA,cAAc,EAAE;AAAA,aAAMD,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA;AADX,GAAP;AAGD,CAJD;;AAMF,eAAe9B,OAAO,CAClBwB,eADkB,EAElBG,kBAFkB,CAAP,CAGX1B,UAAU,CAACU,MAAD,CAAV,CAAmBO,SAAnB,CAHW,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport List from \"./list\";\n\nimport list from \"./data/list\";\n\nconst styles = theme => ({\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    }\n  });\n\nclass AddDialog extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Dialog open={false} onClose={null}>\n        <DialogTitle>Add a new product</DialogTitle>\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"New item\"\n          defaultValue=\"\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={this.changeNewItem}\n        />\n        <TextField\n          id=\"outlined\"\n          label=\"Additional info\"\n          defaultValue=\"\"\n          className={classes.textField}\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={this.changeNewItemInfo}\n        />\n        <DialogActions>\n          <Button color=\"primary\" onClick={this.handleCloseAdd}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return { openInfo: state.openInfo };\n  };\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      handleOpenInfo: () => dispatch({ type: \"INFO\" })\n    };\n  };\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withStyles(styles)(AddDialog));\n  "]},"metadata":{},"sourceType":"module"}