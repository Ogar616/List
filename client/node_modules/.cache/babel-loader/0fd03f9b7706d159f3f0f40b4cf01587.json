{"ast":null,"code":"import _classCallCheck from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _toConsumableArray from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/ogar/myProjects/shoppingList/src/components/list.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport list from \"./data/list\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      minWidth: 300,\n      backgroundColor: theme.palette.background.paper\n    },\n    checklList: {\n      display: \"flex\",\n      flexDirection: \"column\"\n    }\n  };\n};\n\nhandleToggle = function handleToggle(value) {\n  return function () {\n    var checked = _this.state.checked;\n    var currentIndex = checked.indexOf(value);\n\n    var newChecked = _toConsumableArray(checked);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    _this.setState({\n      checked: newChecked\n    });\n  };\n};\n\nvar shoppingList = list.map(function (item, index) {\n  return React.createElement(ListItem, {\n    key: index,\n    role: undefined,\n    dense: true,\n    button: true,\n    onClick: handleToggle(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: _this.state.checked.indexOf(item) !== -1,\n    tabIndex: -1,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(ListItemText, {\n    primary: item.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(ListItemSecondaryAction, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Comments\",\n    onClick: _this.handleOpenInfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CommentIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))));\n});\n\nvar List =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(List, _React$Component);\n\n  function List() {\n    _classCallCheck(this, List);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(List).apply(this, arguments));\n  }\n\n  _createClass(List, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(List, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, shoppingList);\n    }\n  }]);\n\n  return List;\n}(React.Component);\n\nList.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(List);","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/components/list.js"],"names":["React","PropTypes","withStyles","ListItem","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","CommentIcon","list","styles","theme","root","width","maxWidth","minWidth","backgroundColor","palette","background","paper","checklList","display","flexDirection","handleToggle","value","checked","state","currentIndex","indexOf","newChecked","push","splice","setState","shoppingList","map","item","index","undefined","name","handleOpenInfo","List","classes","props","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\n\nimport list from \"./data/list\";\n\n\nconst styles = theme => ({\n    root: {\n        width: \"100%\",\n        maxWidth: 360,\n        minWidth: 300,\n        backgroundColor: theme.palette.background.paper\n      },\n    checklList: {\n        display: \"flex\",\n        flexDirection: \"column\"\n      }\n    });\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n    \n        if (currentIndex === -1) {\n          newChecked.push(value);\n        } else {\n          newChecked.splice(currentIndex, 1);\n        }\n    \n        this.setState({\n          checked: newChecked\n        });\n      };\n\nconst shoppingList = list.map((item, index) => (\n    <ListItem\n      key={index}\n      role={undefined}\n      dense\n      button\n      onClick={handleToggle(item)}\n    >\n      <Checkbox\n        checked={this.state.checked.indexOf(item) !== -1}\n        tabIndex={-1}\n        disableRipple\n      />\n      <ListItemText primary={item.name} />\n      <ListItemSecondaryAction>\n        <IconButton aria-label=\"Comments\" onClick={this.handleOpenInfo}>\n          <CommentIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  ));\n\n  class List extends React.Component {\n    \n      render() {\n        const { classes } = this.props;  \n        \n        return  <List className={classes.root}>{shoppingList}</List>\n      }\n  }\n\n  List.propTypes = {\n    classes: PropTypes.object.isRequired\n  };\n\n  export default withStyles(styles)(List);"]},"metadata":{},"sourceType":"module"}