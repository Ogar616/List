{"ast":null,"code":"import _classCallCheck from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ogar/myProjects/shoppingList/src/components/infoDialog.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nvar InfoDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoDialog, _Component);\n\n  function InfoDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InfoDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfoDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.activeInfo = _this.props.activeInfo;\n    return _this;\n  }\n\n  _createClass(InfoDialog, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          openInfo = _this$props.openInfo,\n          handleOpenInfo = _this$props.handleOpenInfo,\n          list = _this$props.list;\n      return React.createElement(Dialog, {\n        open: openInfo,\n        onClose: handleOpenInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"More info\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, list[this.activeInfo].info)), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: handleOpenInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }]);\n\n  return InfoDialog;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    openInfo: state.openInfo,\n    list: state.list,\n    activeInfo: state.activeInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleOpenInfo: function handleOpenInfo() {\n      return dispatch({\n        type: \"INFO_DIALOG\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoDialog);","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/components/infoDialog.js"],"names":["React","Component","connect","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","InfoDialog","activeInfo","props","openInfo","handleOpenInfo","list","info","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;IAEMC,U;;;;;;;;;;;;;;;;;UACJC,U,GAAa,MAAKC,KAAL,CAAWD,U;;;;;;6BACf;AAAA,wBACoC,KAAKC,KADzC;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,cADX,eACWA,cADX;AAAA,UAC2BC,IAD3B,eAC2BA,IAD3B;AAEP,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEF,QAAd;AAAwB,QAAA,OAAO,EAAEC,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBC,IAAI,CAAC,KAAKJ,UAAN,CAAJ,CAAsBK,IAA1C,CADF,CAFF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEF,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CALF,CADF;AAaD;;;;EAjBsBZ,S;;AAoBzB,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QADX;AAELE,IAAAA,IAAI,EAAEG,KAAK,CAACH,IAFP;AAGLJ,IAAAA,UAAU,EAAEO,KAAK,CAACP;AAHb,GAAP;AAKD,CAND;;AAQA,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLN,IAAAA,cAAc,EAAE;AAAA,aAAMM,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA;AADX,GAAP;AAGD,CAJD;;AAMA,eAAelB,OAAO,CACpBc,eADoB,EAEpBE,kBAFoB,CAAP,CAGbT,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nclass InfoDialog extends Component {\n  activeInfo = this.props.activeInfo;\n  render() {\n    const { openInfo, handleOpenInfo, list } = this.props;\n    return (\n      <Dialog open={openInfo} onClose={handleOpenInfo}>\n        <DialogTitle>More info</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{list[this.activeInfo].info}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={handleOpenInfo}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    openInfo: state.openInfo,\n    list: state.list,\n    activeInfo: state.activeInfo\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleOpenInfo: () => dispatch({ type: \"INFO_DIALOG\" })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InfoDialog);\n"]},"metadata":{},"sourceType":"module"}