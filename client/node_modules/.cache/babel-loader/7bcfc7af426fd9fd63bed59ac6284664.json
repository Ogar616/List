{"ast":null,"code":"import _toConsumableArray from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"INFO_DIALOG\":\n      var index;\n      action.index === undefined ? index = 0 : index = action.index;\n      return _objectSpread({}, state, {\n        openInfo: state.openInfo ? false : true,\n        activeInfo: index\n      });\n\n    case \"ADD_DIALOG\":\n      return _objectSpread({}, state, {\n        openAdd: state.openAdd ? false : true\n      });\n\n    case \"ADD_ITEM\":\n      console.log(\"ADD_ITEM in reducer fired\");\n      return _objectSpread({}, state, {\n        list: _toConsumableArray(state.list).concat([action.newItem])\n      });\n\n    case \"DELETE_ITEM\":\n      var newList = _toConsumableArray(state.list.slice(0, action.index)).concat(_toConsumableArray(state.list.slice(action.index + 1)));\n\n      return _objectSpread({}, state, {\n        list: newList\n      });\n\n    case \"HANDLE_CHECK\":\n      return _objectSpread({}, state, {\n        checked: action.newChecked\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/reducers/reducer.js"],"names":["reducer","state","action","type","index","undefined","openInfo","activeInfo","openAdd","console","log","list","newItem","newList","slice","checked","newChecked"],"mappings":";;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,UAAIC,KAAJ;AACAF,MAAAA,MAAM,CAACE,KAAP,KAAiBC,SAAjB,GAA6BD,KAAK,GAAG,CAArC,GAAyCA,KAAK,GAAGF,MAAM,CAACE,KAAxD;AACA,+BACKH,KADL;AAEEK,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,GAAiB,KAAjB,GAAyB,IAFrC;AAGEC,QAAAA,UAAU,EAAEH;AAHd;;AAKF,SAAK,YAAL;AACE,+BAAYH,KAAZ;AAAmBO,QAAAA,OAAO,EAAEP,KAAK,CAACO,OAAN,GAAgB,KAAhB,GAAwB;AAApD;;AACF,SAAK,UAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,+BAAYT,KAAZ;AAAmBU,QAAAA,IAAI,qBAAMV,KAAK,CAACU,IAAZ,UAAkBT,MAAM,CAACU,OAAzB;AAAvB;;AACF,SAAK,aAAL;AACA,UAAMC,OAAO,sBAAOZ,KAAK,CAACU,IAAN,CAAWG,KAAX,CAAiB,CAAjB,EAAoBZ,MAAM,CAACE,KAA3B,CAAP,4BAA6CH,KAAK,CAACU,IAAN,CAAWG,KAAX,CAAiBZ,MAAM,CAACE,KAAP,GAAe,CAAhC,CAA7C,EAAb;;AACE,+BACKH,KADL;AAEEU,QAAAA,IAAI,EAAEE;AAFR;;AAIF,SAAK,cAAL;AACE,+BAAYZ,KAAZ;AAAmBc,QAAAA,OAAO,EAAEb,MAAM,CAACc;AAAnC;;AACF;AACE,aAAOf,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n  switch (action.type) {\n    case \"INFO_DIALOG\":\n      let index;\n      action.index === undefined ? index = 0 : index = action.index;\n      return {\n        ...state,\n        openInfo: state.openInfo ? false : true,\n        activeInfo: index\n      };\n    case \"ADD_DIALOG\":\n      return { ...state, openAdd: state.openAdd ? false : true };\n    case \"ADD_ITEM\":\n      console.log(\"ADD_ITEM in reducer fired\");\n      return { ...state, list: [...state.list, action.newItem] };\n    case \"DELETE_ITEM\":\n    const newList = [...state.list.slice(0, action.index), ...state.list.slice(action.index + 1)];\n      return {\n        ...state,\n        list: newList\n      };\n    case \"HANDLE_CHECK\":\n      return { ...state, checked: action.newChecked };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}