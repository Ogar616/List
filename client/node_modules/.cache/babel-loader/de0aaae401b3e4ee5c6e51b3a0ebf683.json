{"ast":null,"code":"import _classCallCheck from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ogar/myProjects/shoppingList/src/components/checkBox.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\nimport List from \"./list\";\nimport InfoDialog from './infoDialog';\nimport list from \"./data/list\";\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      minWidth: 300,\n      backgroundColor: theme.palette.background.paper\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit\n    }\n  };\n};\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Checkbox, _Component);\n\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).apply(this, arguments));\n  }\n\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          checked = _this$props.checked,\n          openInfo = _this$props.openInfo,\n          openAdd = _this$props.openAdd,\n          newItem = _this$props.newItem,\n          newItemInfo = _this$props.newItemInfo,\n          handleOpenInfo = _this$props.handleOpenInfo;\n      console.log(this.props.openInfo);\n      return React.createElement(\"div\", {\n        className: classes.checkList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        open: false,\n        onClose: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add a new product\"), React.createElement(TextField, {\n        required: true,\n        id: \"outlined-required\",\n        label: \"New item\",\n        defaultValue: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.changeNewItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(TextField, {\n        id: \"outlined\",\n        label: \"Additional info\",\n        defaultValue: \"\",\n        className: classes.textField,\n        margin: \"normal\",\n        variant: \"outlined\",\n        onChange: this.changeNewItemInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleCloseAdd,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleOpenAddItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Add new item\"));\n    }\n  }]);\n\n  return Checkbox;\n}(Component);\n\nCheckbox.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // checked: PropTypes.boolean,\n  openInfo: PropTypes.bool,\n  openAdd: PropTypes.bool,\n  newItem: PropTypes.object,\n  newItemInfo: PropTypes.string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    openInfo: state.openInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleOpenInfo: function handleOpenInfo() {\n      return dispatch({\n        type: 'INFO'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Checkbox));","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/components/checkBox.js"],"names":["React","Component","PropTypes","connect","withStyles","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","TextField","List","InfoDialog","list","styles","theme","root","width","maxWidth","minWidth","backgroundColor","palette","background","paper","textField","marginLeft","spacing","unit","marginRight","Checkbox","props","classes","checked","openInfo","openAdd","newItem","newItemInfo","handleOpenInfo","console","log","checkList","changeNewItem","changeNewItemInfo","handleCloseAdd","handleOpenAddItem","propTypes","object","isRequired","bool","string","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport List from \"./list\";\nimport InfoDialog from './infoDialog';\n\nimport list from \"./data/list\";\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    minWidth: 300,\n    backgroundColor: theme.palette.background.paper\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  }\n});\n\nclass Checkbox extends Component {\n  render() {\n    const {\n      classes,\n      checked,\n      openInfo,\n      openAdd,\n      newItem,\n      newItemInfo,\n      handleOpenInfo\n    } = this.props;\n\n    console.log(this.props.openInfo);\n\n    return (\n      <div className={classes.checkList}>\n        <List />\n        \n        <Dialog open={false} onClose={null}>\n          <DialogTitle>Add a new product</DialogTitle>\n          <TextField\n            required\n            id=\"outlined-required\"\n            label=\"New item\"\n            defaultValue=\"\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.changeNewItem}\n          />\n          <TextField\n            id=\"outlined\"\n            label=\"Additional info\"\n            defaultValue=\"\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={this.changeNewItemInfo}\n          />\n          <DialogActions>\n            <Button color=\"primary\" onClick={this.handleCloseAdd}>\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Button color=\"primary\" onClick={this.handleOpenAddItem}>\n          Add new item\n        </Button>\n      </div>\n    );\n  }\n}\n\nCheckbox.propTypes = {\n  classes: PropTypes.object.isRequired,\n  // checked: PropTypes.boolean,\n  openInfo: PropTypes.bool,\n  openAdd: PropTypes.bool,\n  newItem: PropTypes.object,\n  newItemInfo: PropTypes.string\n};\n\n\nconst mapStateToProps = state => {\n  return { openInfo: state.openInfo };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleOpenInfo: () => dispatch({ type: 'INFO' }),\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Checkbox));\n"]},"metadata":{},"sourceType":"module"}