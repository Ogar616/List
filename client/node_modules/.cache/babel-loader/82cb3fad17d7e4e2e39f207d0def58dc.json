{"ast":null,"code":"import _classCallCheck from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ogar/myProjects/shoppingList/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ogar/myProjects/shoppingList/src/components/infoDialog.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nvar InfoDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InfoDialog, _Component);\n\n  function InfoDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InfoDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InfoDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      openInfo: _this.props.openInfo\n    };\n    return _this;\n  }\n\n  _createClass(InfoDialog, [{\n    key: \"render\",\n    value: function render() {\n      var openInfo = this.props.openInfo;\n      return React.createElement(Dialog, {\n        open: openInfo,\n        onClose: null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"More info\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Buy in Lidl\")), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: openInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }]);\n\n  return InfoDialog;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    openInfo: state.openInfo\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    handleOpenInfo: function handleOpenInfo() {\n      return dispatch({\n        type: \"INFO\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InfoDialog);","map":{"version":3,"sources":["/home/ogar/myProjects/shoppingList/src/components/infoDialog.js"],"names":["React","Component","connect","Button","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","InfoDialog","state","openInfo","props","mapStateToProps","mapDispatchToProps","dispatch","handleOpenInfo","type"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,MAAKC,KAAL,CAAWD;AADjB,K;;;;;;6BAGD;AAAA,UACGA,QADH,GACgB,KAAKC,KADrB,CACGD,QADH;AAEP,aACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAEA,QAAd;AAAwB,QAAA,OAAO,EAAE,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFF,EAKE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAEA,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CALF,CADF;AAaD;;;;EAnBsBV,S;;AAsBzB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,CAAAH,KAAK,EAAI;AAC/B,SAAO;AAAEC,IAAAA,QAAQ,EAAED,KAAK,CAACC;AAAlB,GAAP;AACD,CAFD;;AAIA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLC,IAAAA,cAAc,EAAE;AAAA,aAAMD,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAd;AAAA;AADX,GAAP;AAGD,CAJD;;AAMA,eAAef,OAAO,CACpBW,eADoB,EAEpBC,kBAFoB,CAAP,CAGbL,UAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nclass InfoDialog extends Component {\n    state = {\n        openInfo: this.props.openInfo\n    }\n  render() {\n      const { openInfo } = this.props;\n    return (\n      <Dialog open={openInfo} onClose={null}>\n        <DialogTitle>More info</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Buy in Lidl</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"primary\" onClick={openInfo}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { openInfo: state.openInfo };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleOpenInfo: () => dispatch({ type: \"INFO\" })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InfoDialog);\n"]},"metadata":{},"sourceType":"module"}